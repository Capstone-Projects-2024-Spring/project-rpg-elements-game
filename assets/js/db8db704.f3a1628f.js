"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7349],{99662:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>h,contentTitle:()=>t,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=e(85893),l=e(11151);const r={sidebar_position:1,description:"What should be in this section."},t="Design Document - Part II API",c={id:"api-specification/design-api-intro",title:"Design Document - Part II API",description:"What should be in this section.",source:"@site/docs/api-specification/design-api-intro.md",sourceDirName:"api-specification",slug:"/api-specification/design-api-intro",permalink:"/project-rpg-elements-game/docs/api-specification/design-api-intro",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-rpg-elements-game/edit/main/documentation/docs/api-specification/design-api-intro.md",tags:[],version:"current",lastUpdatedBy:"thegreatandmightywafflecaptain",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"What should be in this section."},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-rpg-elements-game/docs/category/api-specification"},next:{title:"API 1 - Swagger Petstore",permalink:"/project-rpg-elements-game/docs/api-specification/openapi-spec"}},h={},d=[];function o(n){const s={em:"em",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"design-document---part-ii-api",children:"Design Document - Part II API"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Unity"})})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"LoginManager"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Provides the backend for the login screen UI. Uses Firebase to register and log in a user with their provided credentials of username and password."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["usernameInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to authenticate a user\u2019s username on Firebase"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["passwordInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to authenticate a user\u2019s password on Firebase"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["OnClickLogin()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Verify user inputted username and password"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Existing username input and password input"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["usernameInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to authenticate a user\u2019s username on Firebase"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["passwordInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to authenticate a user\u2019s password on Firebase"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cInvalidLogin\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["OnClickRegister()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Create an account on Firebase using user inputted username and password"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: Successful verification message"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["usernameInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to register a user\u2019s username on Firebase"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["passwordInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to register a user\u2019s password on Firebase"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cInvalidUsername\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInvalidPassword\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"MainMenuManager"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: The first screen the user sees upon application launch. Allows the user to navigate to the tutorial, creation of a lobby, view friends list, and exit the application."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"None"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["OnClickTutorial()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Begins the tutorial for the user upon user prompt"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: The user is now in the \u2018tutorial\u2019 section of the application"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["OnClickCreateLobby()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Brings the user to the lobby screen where the user can either join or create a lobby"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: The lobby screen is presented"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["OnClickFriendsList()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Shows the user a list of their registered friends"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has at least one registered friend"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["OnClickExit()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Exits the game and closes the application for the user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"LobbyManager"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Controls the lobby for the user, where the game can begin and other users can join the same lobby for multiplayer gameplay."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["CreateLobby()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Creates a new lobby with just the user in it and shows a code for other user invitation"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: Generate a unique lobby code"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["JoinLobby()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Joins an existing lobby"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid lobby code"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["lobbyCode","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: String"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Linking the user to an existing lobby with its respective lobby code"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cInvalidCode\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["setDifficulty()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Sets the difficulty for the game lobby"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["diffcultyChoice","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: float"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Controls the amount of increased stats the enemy characters have, thus increasing difficulty"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"PlayerController"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Controls the movement of the player decided through user interaction, and controls the looks and stats of the user\u2019s character."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Hitbox:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Hitbox"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Controls contact-based interactions between player attacks and enemies"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Hurtbox:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Hurtbox"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Controls contact-based interactions between the player itself and the enemy"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["GetInput()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Awaits user input"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid user input"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["KeyDown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: KeyDown"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Registers which button the user pressed for corresponding action"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInvalidInput\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GetCharacter()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Gets the information from the user\u2019s character"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Character","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Player"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Stores information about a specific character"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GetStats()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Obtains the list of stats a specific character has"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid character"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["StatSheet","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: PlayerStat"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Lists stats of a character as well as functions for increasing and decreasing of a stat"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GetSprite()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Obtains the sprite of a character to show to the user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid character"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Character","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Sprite"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: A specific sprite state corresponding to an action the character can perform"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"EnemyController"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Controls the movement of the enemy through AI scripts and stores information of stats and sprites."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Hitbox:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Hitbox"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Controls contact-based interactions between enemy attacks and the player"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Hurtbox:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Hurtbox"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Controls contact-based interactions between the enemy itself and the player"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["GetStats()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Obtains the list of stats a specific character has"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid character"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["StatSheet","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: EnemyStat"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Lists stats of a character as well as functions for increasing and decreasing of a stat"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GetSprite()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Obtains the sprite of a character to show to the user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid character"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Character","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Sprite"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: A specific sprite state corresponding to an action the character can perform"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"UIManager"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Controls the display of the user interface to the player."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["DisplayHealth()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Displays the current health of the user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["userHealth","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: float"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Stores the current user health of how many enemy hits they can take"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["DisplayExperience()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Displays the current experience points of the user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["userExp","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: float"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Stores the current experience points of the user"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["DisplayLevel()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Displays the current level of the user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["userLevel","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: int"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Shows to the user what level they are as a reflection of their progress in the game, and what their stats may look like"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["UpdateDisplay()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Updates the information shown to the user in current UI"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: N/A"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Firebase"})})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"ChatMessenger"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Manages the sending and receiving of messages from other users."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["ReturnChatlogs()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Returns the history of existing chat messages so far"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["ChatHistory","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: list<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Stores each individual chat message between users in a lobby"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"UserAuthentication"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Authenticates the user on the firebase server"}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["register()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Registers a user\u2019s inputted credentials"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid username and password"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["usernameInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to register a user\u2019s username on Firebase"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["passwordInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to register a user\u2019s password on Firebase"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cInvalidLogin\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["login()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Validates"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: Valid username and password"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: User has an active login session"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["usernameInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to validate a user\u2019s username on Firebase"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["passwordInput","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: InputField"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Used to validate a user\u2019s password on Firebase"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cInvalidLogin\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["logout()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Ends the user login session"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: User has no active login session"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"AchievementTracker"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Track achievements earned on a user\u2019s account"}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["achievements()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Return all earned achievements"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["achievementsList","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Holds each achievement earned by a user"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cIndexOutOfBounds\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["getProgress()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: See active progress of a user in their current game"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["currentProgress","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: float"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: A number representing the current progress a user has made through their game"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["setCompletion()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Updates the user\u2019s current progress level through their game"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["currentProgress","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: float"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: A number representing the current progress a user has made through their game"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"FriendsListManager"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Manages the user\u2019s current friends"}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["addFriend()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Adds a friend to a user\u2019s friends list"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Account","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Account"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: The target account to be added to the user\u2019s friends list"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["removeFriend()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Remove an account from a user\u2019s friends list"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Account","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: Account"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: The target account to be removed from the user\u2019s friends list"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["getFriends()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Returns a list of the user\u2019s current friends on their friends list"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["friendsList","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<Account>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: A list of each account on a user\u2019s friends list"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cIndexOutOfBounds\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Photon"})})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Matchmaking"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Manages the lobby connection between each user\u2019s game"}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["userID","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: String"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Holds the ID of a specific user"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["lobbyUserIDs","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: List that holds each ID of every user in the lobby"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["createLobby()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Begins a new active lobby session"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["joinRandomGame()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Allows the user to join a random active lobby without requiring the input of a specific lobby code"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User has an active login session"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cInactiveSession\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Multiplayer"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Manages each user\u2019s current game state and shares it with other users to create a synced game environment."}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["userID","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: String"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Holds the ID of a specific user"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["lobbyUserIDs","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: List that holds each ID of every user in the lobby"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["startMultiplayer()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Begins the active synchronization process between user game clients"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User is in a lobby"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["lobbyUserIDs","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: The list of user IDs to share the game state with"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cIndexOutOfBounds\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["sendSharedState()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Share the current game state of a user\u2019s client with the other users in the lobby"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User is in a lobby"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["lobbyUserIDs","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: The list of user IDs to share the game state with"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cIndexOutOfBounds\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["getSharedState()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Receive the current game state of other users in the lobby to ensure the game state is synced for each user"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User is in a lobby"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"InGameMessage"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Manages the in game chat between users in a lobby"}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["chatLogs","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: List<String>"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Holds the chat message history as a list with item being a specific message"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["sendMessage()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Sends a chat message to other users in the lobby"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User is in a lobby"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Message","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Type: String"}),"\n",(0,i.jsx)(s.li,{children:"Purpose: Contains the user\u2019s message to be shared with the lobby"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n",(0,i.jsx)(s.li,{children:"\u201cIndexOutOfBounds\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Network"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Class purpose: Creates the connection between the user game client and the Photon server"}),"\n",(0,i.jsxs)(s.li,{children:["Data Fields:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Methods:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["connectToPhotonServer()","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Purpose: Connect to the Photon server for multiplayer functionality"}),"\n",(0,i.jsx)(s.li,{children:"Pre-Conditions: User is in a lobby"}),"\n",(0,i.jsx)(s.li,{children:"Post-Conditions: N/A"}),"\n",(0,i.jsxs)(s.li,{children:["Parameters / Data types:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return value / output variables","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Exceptions thrown","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\u201cNullPointerException\u201d"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function a(n={}){const{wrapper:s}={...(0,l.a)(),...n.components};return s?(0,i.jsx)(s,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}},11151:(n,s,e)=>{e.d(s,{Z:()=>c,a:()=>t});var i=e(67294);const l={},r=i.createContext(l);function t(n){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(s):{...s,...n}}),[s,n])}function c(n){let s;return s=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:t(n.components),i.createElement(r.Provider,{value:s},n.children)}}}]);