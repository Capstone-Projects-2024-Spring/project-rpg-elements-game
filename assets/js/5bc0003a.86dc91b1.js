"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8794],{39749:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var s=n(85893),r=n(11151);const i={sidebar_position:2},a="System Block Diagram",o={id:"requirements/system-block-diagram",title:"System Block Diagram",description:"SystemBlockDiagram",source:"@site/docs/requirements/system-block-diagram.md",sourceDirName:"requirements",slug:"/requirements/system-block-diagram",permalink:"/project-rpg-elements-game/docs/requirements/system-block-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-rpg-elements-game/edit/main/documentation/docs/requirements/system-block-diagram.md",tags:[],version:"current",lastUpdatedBy:"Brian",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"System Overview",permalink:"/project-rpg-elements-game/docs/requirements/system-overview"},next:{title:"General Requirements",permalink:"/project-rpg-elements-game/docs/requirements/general-requirements"}},c={},m=[];function l(e){const t={em:"em",h1:"h1",img:"img",p:"p",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"system-block-diagram",children:"System Block Diagram"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://github.com/Capstone-Projects-2024-Spring/project-rpg-elements-game/assets/95385730/6905f297-1e28-4ac3-9a9a-b5bfc63ceac7",alt:"SystemBlockDiagram"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Figure 1. High level design of the Wildlife Odyssey architecture"})}),"\n",(0,s.jsx)(t.p,{children:"Figure 1 shows the proposed design for our 2D Platformer game, which will run on all major operating systems (Windows, Mac, & Linux). The game can be downloaded, installed, and booted from your local PC as a desktop application. The front-end character design of the game will be created internally and animated using the Unity Engine. Custom scripting in C# will be used for player movements, animations, game physics, and the procedural generation of the map. Multiplayer will be implemented using the Photon Unity Networking solution and will provide real-time cloud-hosted matchmaking and in-game chat. User authentication, chat messages, achievements, and friends' lists will be stored and implemented using Firebase real-time Database/Authentication tools."})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(67294);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);